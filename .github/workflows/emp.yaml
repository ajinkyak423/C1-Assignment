name: Build and Push Docker Image

on:
  push:
    branches:
      - '**' 
      
jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Check out asset-management-plugins
      uses: actions/checkout@v4
      with:
        ref: ${{ github.ref }}


    - name: Generate New Image Tag
      id: tag
      run: |
        TAG=$(awk '/^FROM/ {print $2}' Dockerfile.build | cut -d ':' -f2)
        PART1=$(echo "$TAG" | cut -d '-' -f 1-2)

        NEW_IMAGE_TAG="$PART1"
        echo "NEW_IMAGE_TAG=$NEW_IMAGE_TAG" >> $GITHUB_ENV

        echo "New_Image_Tag=$NEW_IMAGE_TAG"
    
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ajinkyak423/assignment
        tags: |
          type=raw,value=${{ env.NEW_IMAGE_TAG }}-{{sha}}-am

        

    # - name: Authenticate with GCR
    #   run: |
    #     echo ${{ secrets.GCR_KEY_FILE }} | base64 -d > gcr-service-account.json
    #     gcloud auth activate-service-account --key-file=gcr-service-account.json
    #   env:
    #     GCR_KEY_FILE: ${{ secrets.GCR_KEY_FILE }}

    - name: Log in to Docker Hub
      run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
    
    - name: setup docker context for buildx
      run: |
        docker context create builders

    - name: setup docker buildx
      uses: docker/setup-buildx-action@v3
      with:
        endpoint: builders

    - name: Build and Push App docker image
      uses: docker/build-push-action@v5
      with:
        file: Dockerfile.build
        push: true
        tags: ${{ steps.meta.outputs.tags }}  

    # - name: Build Docker image
    #   run: |
    #     docker build --build-arg SUMMON_PLATFORM_IMAGE=3.8 -t ajinkyak423/assignment:${{ env.NEW_IMAGE_TAG }} -f ./Dockerfile.build .
    
    # - name: Fetch the Docker image from GCR
    #   run: |
    #     docker pull ajinkyak423/assignment:3.8
    #   env:
    #     GCR_PROJECT: your-project
    #     GCR_IMAGE: your-image
    #     GCR_TAG: your-tag

    # - name: Run the Docker container and copy the repo code
    #   run: |
    #     # CONTAINER_ID=$(docker run -d ajinkyak423/assignment:3.8 sleep infinity)
    #     # docker cp . $CONTAINER_ID:/srv/vehicle_lifecycle
    #     # docker commit $CONTAINER_ID ajinkyak423/assignment:${{ env.NEW_IMAGE_TAG }} 
    #     # docker rm -f $CONTAINER_ID  
    #     docker push ajinkyak423/assignment:${{ env.NEW_IMAGE_TAG }}
